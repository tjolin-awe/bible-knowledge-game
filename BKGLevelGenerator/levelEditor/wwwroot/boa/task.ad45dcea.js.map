{"version":3,"sources":["src/task.js"],"names":["gameArray","gameOptions","isMatch","row","col","isHorizontalMatch","isVerticalMatch","gemAt","gemColor","fieldSize","matchInBoard","i","j","is_there_a_valid_move","oldpj","result","oldij","self","addEventListener","e","data","cmd","postMessage","moves_left","msg","close"],"mappings":"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","file":"task.ad45dcea.js","sourceRoot":"..","sourcesContent":["var gameArray = [];\r\nvar gameOptions;\r\nfunction isMatch(row, col) {\r\n\r\n\r\n\r\n    return isHorizontalMatch(row, col) || isVerticalMatch(row, col);\r\n}\r\nfunction isHorizontalMatch(row, col) {\r\n \r\n    return gemAt(row, col).gemColor == gemAt(row, col - 1).gemColor && gemAt(row, col).gemColor == gemAt(row, col - 2).gemColor;\r\n}\r\nfunction isVerticalMatch(row, col) {\r\n    return gemAt(row, col).gemColor == gemAt(row - 1, col).gemColor && gemAt(row, col).gemColor == gemAt(row - 2, col).gemColor;\r\n}\r\nfunction gemAt(row, col) {\r\n\r\n    if (row < 0 || row >= gameOptions.fieldSize || col < 0 || col >= gameOptions.fieldSize) {\r\n        return -1;\r\n    }\r\n    return gameArray[row][col];\r\n}\r\n function matchInBoard() {\r\n    for (let i = 0; i < gameOptions.fieldSize; i++) {\r\n        for (let j = 0; j < gameOptions.fieldSize; j++) {\r\n            if (isMatch(i, j)) {\r\n               \r\n        \r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction is_there_a_valid_move() {\r\n    // Try all horizontal moves\r\n    for (let i = 0; i < gameOptions.fieldSize-1; i++) {\r\n        for (let j = 0; j < gameOptions.fieldSize; j++) {\r\n\r\n            var oldpj = gameArray[i][j]\r\n\r\n            gameArray[i][j] = gameArray[i + 1][j];\r\n            gameArray[i + 1][j] = oldpj;\r\n\r\n\r\n            var result = matchInBoard();\r\n\r\n\r\n            gameArray[i + 1][j] = gameArray[i][j];\r\n            gameArray[i][j] = oldpj;\r\n\r\n            if (result == true) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i < gameOptions.fieldSize; i++) {\r\n        for (let j = 0; j < gameOptions.fieldSize-1; j++) {\r\n\r\n            var oldij = gameArray[i][j]\r\n            gameArray[i][j] = gameArray[i][j + 1];\r\n            gameArray[i][j + 1] = oldij;\r\n\r\n\r\n            var result = matchInBoard();\r\n\r\n          \r\n            gameArray[i][j + 1] = gameArray[i][j];\r\n            gameArray[i][j] = oldij;\r\n\r\n            if (result == true) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    return false\r\n\r\n}\r\n\r\n\r\nself.addEventListener('message', function(e) {\r\n    var data = e.data;\r\n\r\n    switch (data.cmd) {\r\n\r\n      case 'start':\r\n          self.postMessage('worker started');\r\n          break;\r\n      case 'check':\r\n        \r\n        gameArray = data.gameArray;\r\n        gameOptions = data.gameOptions;\r\n    \r\n \r\n        var result = ''\r\n        var moves_left = is_there_a_valid_move();\r\n        if (moves_left === true){\r\n            result = 'There are moves left!';\r\n        } else {\r\n            result = 'No more moves left';\r\n        }\r\n        self.postMessage(result); \r\n\r\n        \r\n\r\n        break;\r\n      case 'stop':\r\n        self.postMessage('WORKER STOPPED: ' + data.msg +\r\n                         '. (buttons will no longer work)');\r\n        self.close(); // Terminates the worker.\r\n        break;\r\n      default:\r\n        self.postMessage('Unknown command: ' + data.msg);\r\n    };\r\n  }, false);"]}